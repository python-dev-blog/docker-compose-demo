version: '3.8'
x-environment-defaults: &environment-defaults
  DEBUG: "False"
  DB_NAME: "prediction"
  DB_USER: "prediction"
  DB_PASSWORD: "prediction"
  DB_HOST: "postgres-db"
  DB_PORT: 5432
  CELERY_BROKER_URL: "redis://redis:6379/0"
  CELERY_RESULT_BACKEND: "redis://redis:6379/0"
  SECRET_KEY: "secret"

services:
  prediction-app:
    build:
      context: ./prediction-app
    ports:
      - "3000:3000"
    networks:
      - prediction-network

  prediction:
    build:
      context: ./prediction
    volumes:
      - ./prediction:/app
      - static_volume:/app/static
    ports:
      - "8000:8000"
    networks:
      - prediction-network
    depends_on:
      - postgres-db
#      - redis
#      - celery
    environment:
      <<: *environment-defaults
    restart: on-failure:5
    healthcheck:
      test: curl -f http://localhost:8000/api/health || exit 1
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s

  postgres-db:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: prediction
      POSTGRES_USER: prediction
      POSTGRES_PASSWORD: prediction
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - prediction-network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - prediction-network

  celery:
    build:
      context: ./prediction
    command: celery -A prediction worker --loglevel=info
    volumes:
      - ./prediction:/app
    depends_on:
      - redis
      - postgres-db
    networks:
      - prediction-network
    environment:
      <<: *environment-defaults

  celery-beat:
    build:
      context: ./prediction
    command: celery -A prediction beat --loglevel=info
    volumes:
      - ./prediction:/app
    depends_on:
      - celery
      - redis
      - postgres-db
    networks:
      - prediction-network
    environment:
      <<: *environment-defaults

  nginx:
    image: nginx:latest
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/static
    ports:
      - "80:80"
    networks:
      - prediction-network
    depends_on:
      - prediction-app
      - prediction

volumes:
  pg_data:
  static_volume:

networks:
  prediction-network:
    driver: bridge